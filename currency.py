import requests
from bs4 import BeautifulSoup as bs
import pandas as pd
from lxml import html
import os
import xlwt
import datetime
import time
import random
import csv
import functools

#https://iss.moex.com/iss/engines/currency/markets/selt/securities.xml?iss.meta=off&iss.only=securities&securities.columns=SECID,OPEN,LOW,HIGH,LAST,WAPRICE

def currency_parse():
    soup = []
    spisok_currency = []
    URL ="https://iss.moex.com/iss/engines/currency/markets/selt/securities.xml?iss.meta=off&iss.only=marketdata&marketdata.columns=SECID,OPEN,LOW,HIGH,LAST,WAPRICE,BOARDID"
    r = requests.get(URL)
    soup = bs(r.text, "html.parser")
    datas = soup.find_all('data')
    for data in datas:
        id_data = data.get('id')
        if id_data == "marketdata":
            dividents = data.find_all('row')
            #print(dividents)
            dividentscheck = list(dividents)
            kol = len(dividents)
            k = 0
            for currency in dividents:
                #print(currency)
                cid = []
                k+=1
                SECID = str(currency.get('secid'))
                OPEN = str(currency.get('open'))
                LOW = str(currency.get('low'))
                HIGH = str(currency.get('high'))
                LAST = str(currency.get('last')) # –ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞
                WAPRICE = str(currency.get('waprice')) # —Å—Ä–µ–¥–Ω–µ–≤–∑–≤–µ—à–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞
                BOARDID = str(currency.get('boardid')) # —Å—Ä–µ–¥–Ω–µ–≤–∑–≤–µ—à–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞
                cid=(SECID,OPEN,LOW,HIGH,LAST,WAPRICE,BOARDID)
                #print(cid)
                spisok_currency.append(cid)
            return spisok_currency

def kursi():
    soob_kursi =[]
    spisok_currency = currency_parse()
    for currency in spisok_currency:
        SECID = currency[0]
        OPEN = currency[1]
        LOW = currency[2]
        HIGH = currency[3]
        LAST = currency[4]
        WAPRICE = currency[5]
        BOARDID = currency[6]
        if SECID == "USD000000TOD" and BOARDID =="CETS":
            soob_kursi.append("–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ üá∫üá∏ "+LAST+" —Ä—É–±–ª–µ–π")
        if SECID == "EUR_RUB__TOD" and BOARDID =="CETS":
            soob_kursi.append("–ö—É—Ä—Å –ï–≤—Ä–æ üá™üá∫ "+LAST+" —Ä—É–±–ª–µ–π")
        if SECID == "EURUSD000TOD" and BOARDID =="CETS":
            soob_kursi.append("–†–∞–∑–Ω–∏—Ü–∞ üá™üá∫/üá∫üá∏ "+LAST)
    return soob_kursi

def dollar():
    soob_dol = []
    spisok_currency = currency_parse()
    for currency in spisok_currency:
        SECID = currency[0]
        OPEN = currency[1]
        LOW = currency[2]
        HIGH = currency[3]
        LAST = currency[4]
        WAPRICE = currency[5]
        BOARDID = currency[6]
        if SECID == "USD000000TOD" and BOARDID =="CETS":
            soob_dol.append("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π –¥–µ–Ω—å:")
            soob_dol.append("–¶–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è "+OPEN)
            soob_dol.append("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ "+HIGH)
            soob_dol.append("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ "+LOW)
            soob_dol.append("–°—Ä–µ–¥–Ω–µ–≤–∑–≤–µ—à–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ "+WAPRICE)
            soob_dol.append("–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å "+LAST)
    return soob_dol

def euro():
    soob_eur = []
    spisok_currency = currency_parse()
    for currency in spisok_currency:
        SECID = currency[0]
        OPEN = currency[1]
        LOW = currency[2]
        HIGH = currency[3]
        LAST = currency[4]
        WAPRICE = currency[5]
        BOARDID = currency[6]
        if SECID == "EUR_RUB__TOD" and BOARDID =="CETS":
            soob_eur.append("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π –¥–µ–Ω—å:")
            soob_eur.append("–¶–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è "+OPEN)
            soob_eur.append("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ "+HIGH)
            soob_eur.append("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ "+LOW)
            soob_eur.append("–°—Ä–µ–¥–Ω–µ–≤–∑–≤–µ—à–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ "+WAPRICE)
            soob_eur.append("–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å "+LAST)
    return soob_eur

def eur_dol():
    soob_uerdol = []
    spisok_currency = currency_parse()
    for currency in spisok_currency:
        SECID = currency[0]
        OPEN = currency[1]
        LOW = currency[2]
        HIGH = currency[3]
        LAST = currency[4]
        WAPRICE = currency[5]
        BOARDID = currency[6]
        if SECID == "EURUSD000TOD" and BOARDID =="CETS":
            soob_uerdol.append("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π –¥–µ–Ω—å:")
            soob_uerdol.append("–¶–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è "+OPEN)
            soob_uerdol.append("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ "+HIGH)
            soob_uerdol.append("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ "+LOW)
            soob_uerdol.append("–°—Ä–µ–¥–Ω–µ–≤–∑–≤–µ—à–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ "+WAPRICE)
            soob_uerdol.append("–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å "+LAST)
    return soob_uerdol

#currency_parse()
#cur = currency_parse()
#for c in cur:
#    print(c)
#dollar()
#print(dollar())
#print(euro())
#print(eur_dol())
